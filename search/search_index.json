{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"arduino_example/","title":"Arduino Example","text":"<p>Now that we've installed the espressif boards package in Arduino, it's time to upload our first sketch to make sure everything is working properly.</p>"},{"location":"arduino_example/#blink-rgb-example","title":"Blink RGB Example","text":"<p>The ESP32 core includes integrated code support for easily controlling a WS2812 LED and an example demonstrating how to cycle an RGB LED like the one found on this Thing Plus so long as the board variant defines it as <code>RGB_BUILTIN</code>. The Thing Plus ESP32-C6 does define IO23 as <code>RBG_BUILTIN</code> so this example and all other code calling for the built-in RGB LED works for this board. Open the example by navigating to File &gt; Examples &gt; ESP32 &gt; GPIO &gt; BlinkRGB like the screenshot below shows: </p> <p></p> <p>Select the board (SparkFun Thing Plus - C6) and Port and click \"Upload\". After uploading you should see the STAT LED on the board turn on full white, turn off, and then cycle through red, green, and blue repeatedly.</p> <p>USB CDC On Boot Settings</p> <p>Take note of the option labeled \"USB CDC on Boot\" when selecting the Board from the Tools menu. This option sets the serial outputs and defines their label for use in code. The SparkFun variants default to Enable USB CDC on boot which sets both <code>Serial</code> and <code>Serial0</code> as available serial ports. In this configuration, <code>Serial</code> corresponds to the direct USB/Serial converter on the chip (and the USB-C interface) and <code>Serial0</code> corresponds to the UART0 bus (default pins are 16 and 17).</p> <p>With either setting, <code>Serial1</code> is available and refers to the UART1 bus (default pins are 4 and 5).</p>"},{"location":"hardware_assembly/","title":"Hardware Assembly","text":"<p>Now that we're familiar with the hardware on this Thing Plus board, it's time to connect it to our computer or battery power.</p>"},{"location":"hardware_assembly/#basic-usb-assembly","title":"Basic USB Assembly","text":"<p>Basic assembly of the Thing Plus ESP32-C only requires a USB-C cable connecting the board to a computer. Just plug the cable into the USB-C connector like the photo below shows and you should see the RGB LED cycling through rainbow colors with the pre-loaded test code. From here, we can move on to installing the espressif boards package in Arduino and uploading code.</p> <p> </p> <p>Note</p> <p>Your computer may not recognize the board as a known USB device if you have not installed the espressif boards package in Arduino and/or installed the espressif IDF.</p>"},{"location":"hardware_assembly/#battery-assembly","title":"Battery Assembly","text":"<p>If you prefer a battery-powered application, plug a single-cell LiPo battery into the 2-pin JST connector on the underside of the board like the photo below. Remember, the MCP73831 only charges the battery when V_USB has voltage present either from the USB-C connector or through the V_USB PTH pin.</p> <p></p> <p>For tips on the proper use of a LiPo battery and the 2-pin JST connector, please read through our Single Cell LiPo Battery Care tutorial.</p>"},{"location":"hardware_assembly/#soldered-assembly","title":"Soldered Assembly","text":"<p>Those who prefer a traditional soldered assembly should solder wires or header pins to the PTH header on the side of the board. If you're not familiar with through-hole soldering or would like a refresher, take a look at our Through-Hole Soldering Tutorial:</p> <ul> <li> How to Solder: Through-Hole Soldering </li> </ul>"},{"location":"hardware_overview/","title":"Hardware Overview","text":"<p>Let's take a closer look at the ESP32-C6 WROOM1 module and other hardware present on this Thing Plus board.</p>"},{"location":"hardware_overview/#esp32-c6-wroom1-module","title":"ESP32-C6 WROOM1 Module","text":"<p>The ESP32-C6 WROOM1 module from espressif combines a powerful RISC-5 processor with a wireless stack compatible with most common wireless protocols.</p> <p></p> <p>This development board uses the WROOM1 version of the C6 module which has slightly more computing power in exchange for lesser power efficiency. The ESP32-C6 is built around a 32-bit RISC-V single-core processor with an integrated wireless stack. The wireless stack is compatible with 2.4 GHz WiFi 6, Bluetooth<sup>\u00ae</sup> 5.3, Zigbee and Thread (802.15.4) and uses an on-board PCB antenna. </p> <p>The module features a wide range of peripheral options including SPI, UART, LPUART, I<sup>2</sup>C, I<sup>2</sup>S, LED PWM, USB Serial/JTAG controller, ADC and more. Many of these peripherals can be mapped to any GPIO pin though some are tied to specific pins. This Thing Plus breaks out 21 pins from the module to a pair of 0.1\"-spaced PTH headers.</p> <p>The ESP32-C6 has 16 MB Flash memory along with 512 KB SRAM (high power)/ 16 KB SRAM (low power). The module uses pin strapping to configure boot mode parameters. The board defaults to standard mode (GPIO 9 internal pull-up, all other strapping pins floating) but it can be set to other parameters by performing the following pin strapping:</p> <ul> <li>SDIO Sampling and Driving Clock Edge - MTMS &amp; MTDI</li> <li>Chip Boot Mode - GPIO8 &amp; GPIO9</li> <li>ROM Code Printing to UART - GPIO8</li> <li>JTAG Signal Source - GPIO15</li> </ul>"},{"location":"hardware_overview/#power-components","title":"Power Components","text":"<p>The Thing Plus ESP32-C6 includes several options for powering including USB-C, LiPo battery with on-board battery charging and monitoring circuits as well as direct power inputs.</p> <p></p>"},{"location":"hardware_overview/#usb-c-connector","title":"USB-C Connector","text":"<p>The USB-C connector on the board acts as the primary serial interface for the ESP32-C6 module as well as a power input. It connects directly to the ESP32-C6's USB serial converter. The 5V USB input voltage is regulated down to 3.3V through a voltage regulator with a max current of 500mA@3.3V.</p>"},{"location":"hardware_overview/#2-pin-jst-connector-battery-charger-fuel-gauge","title":"2-Pin JST Connector, Battery Charger, &amp; Fuel Gauge","text":"<p>The board has a 2-pin JST connector to connect a single-cell Lithium Ion (LiPo) battery for battery-powered applications. It also has an MCP73831 battery charger to charge an attached battery and a MAX17048 fuel gauge to monitor battery voltage levels over I<sup>2</sup>C. The charge rate is set to 214mA@3.3V. The MCP73831 receives power from the V_USB line so it only is powered when 5V is provided either over USB or the V_USB PTH pin. If applying voltage directly to the V_USB pin make sure it does not exceed 5.5V.</p>"},{"location":"hardware_overview/#pinout-qwiic-connector","title":"Pinout &amp; Qwiic Connector","text":"<p>Next up let's take a look at the Thing Plus pinout and Qwiic connector on this board.</p> <p></p>"},{"location":"hardware_overview/#pth-headers","title":"PTH Headers","text":"<p>The Thing Plus routes 23 of the ESP32-C6's GPIO pins to a pair of 0.1\"-spaced headers on either side of the board. This includes all seven of the 12-bit ADC-capable pins, one UART, one I<sup>2</sup>C bus (SDA/SCL), one SPI interface (POCI/PICO/SCK), and seven GPIO pins. Some of the GPIO connect to specific functions on the board by default through solder jumpers listed below:</p> <ul> <li>IO18 - CS</li> <li>IO22 - SD Detect</li> <li>IO11 - MAX17038 Alert</li> <li>IO23 - WS2812 STAT LED Data In</li> <li>IO15 - Low Power control</li> </ul>"},{"location":"hardware_overview/#qwiic-connector","title":"Qwiic Connector","text":"<p>There's a Qwiic connector on the board tied to the ESP32-C6's Low Power I<sup>2</sup>C bus (I/O pins 6 and 7) for easy integration into SparkFun's Qwiic ecosystem. The Qwiic connector provides connections for SDA, SCL, 3.3V, and Ground.</p>"},{"location":"hardware_overview/#buttons","title":"Buttons","text":"<p>There are two buttons on the board labeled RESET and BOOT. The RESET button is tied to the ESP32-C6's Enable (EN) pin and resets the module when pressed. The BOOT button puts the ESP32-C6 into bootloader mode when held down during power on or reset.</p> <p></p>"},{"location":"hardware_overview/#sd-card-slot","title":"\u00b5SD Card Slot","text":"<p>This board also has a friction-fit \u00b5SD card slot for users who need more storage space on the Thing Plus - ESP32-C6. </p> <p></p> <p>The slot connects the SD card's communication interface to the ESP32-C6's SPI interface using the following pins:</p> <ul> <li>SD Serial Data Out: IO21/POCI</li> <li>SD Serial Data In: IO20/PICO</li> <li>SD Serial Clock: IO19/SCK</li> <li>SD Chip Select: IO18/CS</li> <li>SD Detect: IO22/SD_DET</li> </ul>"},{"location":"hardware_overview/#leds","title":"LEDs","text":"<p>This Thing Plus has three LEDs labeled PWR, CHG, and STAT. The red Power (PWR) LED indicates whenever the 3.3V circuit is powered. The yellow Charge (CHG) LED indicates whenever the MCP73831 is charging a connected LiPo battery. The WS2812 RGB Status (STAT) LED connects the LED's Data In signal to IO23.</p> <p></p> <p>RGB LED</p> <p>The board definition for the Thing Plus - ESP32-C6 sets IO23 to use espressif's <code>RGB_BUILTIN</code> code support. This automatically includes the necessary code to control an RGB LED easily when calling <code>RGB_BUILTIN</code>. Unfortunately, this means the RGB PTH pin (IO23) can run into code conflicts when users attempt to use it for another purpose. If you really need IO23 for something other than the RGB LED, you may need to modify the board definition files in the ESP32 Arduino boards package. Modifying these files is beyond the scope of this tutorial and is not supported by SparkFun.</p>"},{"location":"hardware_overview/#solder-jumpers","title":"Solder Jumpers","text":"<p>There are nine solder jumpers on the Thing Plus - ESP32-C6 labeled I<sup>2</sup>C, ALRT, SD_DET, MEAS, LP, SHLD, RGB, CHG, and PWR. The table below outlines the jumpers' labels, default state, function, and any notes regarding their use:</p> <p></p> Label Default State Function Notes I<sup>2</sup>C CLOSED Three-way jumper pulls the SDA/SCL lines to 3.3V through a pair of 2.2k\u03a9 resistors Open completely to disable pullups on I<sup>2</sup>C bus if needed ALRT CLOSED Ties the MAX17048's alert pin to IO11 for battery voltage monitoring Open to isolate IO11 from the MAX17048's alert pin if IO11 is needed for other uses SD_DET CLOSED Connects the \u00b5SD card's card detection pin to IO19 Open to disable \u00b5SD card detection or if IO19 is needed for other uses MEAS CLOSED Completes the input voltage circuit from V_USB &amp; V_Batt to the 3.3V regulator Open to interrupt the circuit to measure current consumed by the board with a digital multimeter LP See Note Enables/disables low power control for the ESP32-C6 Three-way jumper. Defaults to disabled (connects to Ground). Adjust to IO15 side to enable low power control SHLD CLOSED Ties the USB-C shield pin to the ground plane Open to isolate USB-C shield pin from the board's ground plane RGB Open Connects WS2812 data out (DO) signal to the No Connect/AREF PTH pin Open to isolate DO signal from the No Connect/AREF PTH pin to chain with other WS2812 LEDs CHG CLOSED Completes Charge LED circuit Open to disable Charge LED PWR CLOSED Completes the Power LED circuit Open to disable the Power LED"},{"location":"hardware_overview/#board-dimensions","title":"Board Dimensions","text":"<p>This board matches the Thing Plus footprint and measures 2.30\" x 0.90\" (58.42mm x 22.86mm) with four mounting holes that fit a 4-40 screw though the top two mounting holes are obstructed by the ESP32-C6 module.</p> <p></p>"},{"location":"introduction/","title":"Introduction","text":"<ul> <li> <p> SparkFun Thing Plus - ESP32-C6 SKU: DEV-22924 <p> </p> <p> </p> <li> <p>The SparkFun Thing Plus - ESP32-C6 adds a powerful wireless development option to SparkFun's popular Thing Plus footprint. This Thing Plus board features the ESP32-C6 WROOM-1-N16 module from espressif<sup>\u2122</sup>. It includes a LiPo battery charger and fuel gauge to charge and monitor a battery connected to the on-bard 2-pin JST connector, &amp;microSD card slot, an addressable LED and more. The board breaks out all of the ESP32-C6's 23 GPIO pins to a pair of 0.1\"-spaced PTH headers on either side of the board. The board also has a USB-C connector for primary power and programming and a Qwiic connector to integrate it into SparkFun's Qwiic ecosystem.</p> <p>The ESP32-C6 SoC is built around a RISC-V single-core processor with 16 MB flash memory with an integrated wireless stack. The wireless stack supports 2.4 GHz WiFi 6, Bluetooth<sup>\u00ae</sup> 5.3, Zigbee and Thread (802.15.4) and uses an on-board PCB antenna. The ESP32-C6 includes a wide range of peripheral options including SPI, UART, LPUART, I<sup>2</sup>C, I<sup>2</sup>S, LED PWM, USB Serial/JTAG controller, ADC and more. Many of these peripherals can be mapped to any GPIO pin though some are tied to specific pins. </p> <p> Purchase from SparkFun  </p> </li>"},{"location":"introduction/#required-materials","title":"Required Materials","text":"<p>To follow along with this guide you will need at least one USB-C cable to connect the Thing Plus to your computer: </p> <ul> <li> <p> <p> </p> <p> USB 3.1 Cable A to C - 3 Foot CAB-14743 </p> <li> <p> <p> </p> <p> Reversible USB A to C Cable - 2m CAB-15424 </p> <p>You may also want to get a Qwiic cable or kit to connect the Thing Plus - ESP32-C6 to other Qwiic devices:</p> <ul> <li> <p> <p> </p> <p> Flexible Qwiic Cable - 50mm PRT-17260 </p> <li> <p> <p> </p> <p> Flexible Qwiic Cable - 500mm PRT-17257 </p> <li> <p> <p> </p> <p>Flexible Qwiic Cable - Female Jumper (4-pin) CAB-17261 </p> <li> <p> <p> </p> <p> SparkFun Qwiic Cable Kit PRT-15081 </p>"},{"location":"introduction/#optional-materials","title":"Optional Materials","text":"<p>The Thing Plus - ESP32-C6 includes a 2-pin JST connector and integrated charging circuit for an attached single-cell LiPo battery. Below are a few options we recommend for battery-powered applications:</p> <ul> <li> <p> <p> </p> <p> Lithium Ion Battery - 1250mAh (IEC62133 Certified) PRT-18286 </p> <li> <p> <p> </p> <p> Lithium Ion Battery - 2Ah PRT-13855 </p> <li> <p> <p> </p> <p> Lithium Ion Battery - 400mAh PRT-13851 </p> <li> <p> <p> </p> <p> Lithium Ion Battery - 850mAh PRT-13854 </p> <p>If you prefer a soldered connection or want to modify the solder jumpers on this board, you may need some of the products listed below:</p> <ul> <li> <p> <p> </p> <p> SparkFun Qwiic Shield for Thing Plus DEV-16790 </p> <li> <p> <p> </p> <p> PINECIL - Smart Mini Portable Soldering Iron TOL-23913 </p> <li> <p> <p> </p> <p> Hobby Knife TOL-09200 </p> <li> <p> <p> </p> <p>Chip Quik No-Clean Flux Pen - 10mL CAB-14579 </p>"},{"location":"introduction/#suggested-reading","title":"Suggested Reading","text":"<p>We designed this board for integration into SparkFun's Qwiic connect system.  Click on the banner below to learn more about the SparkFun Qwiic Connect System.</p> Qwiic Connect System <p>Before getting started with this Hookup Guide, you may want to read through the tutorials below if you are not familiar with the concepts covered in them or want a refresher. If you are using either of the Qwiic Shields linked above, we recommend reading through their respective Hookup Guides before continuing with this tutorial:</p> <ul> <li> <p> Serial Communication </p> </li> <li> <p> I2C </p> </li> <li> <p> Logic Levels </p> </li> <li> <p> Installing Arduino IDE </p> </li> <li> <p> Installing an Arduino Library </p> </li> <li> <p> Serial Terminal Basics </p> </li> <li> <p> SparkFun Qwiic Shield for Thing Plus Hookup Guide </p> </li> <li> <p> How to Work with Jumper Pads and PCB Traces </p> </li> </ul>"},{"location":"print_view/","title":"Introduction","text":"<ul> <li> <p> SparkFun Thing Plus - ESP32-C6 SKU: DEV-22924 <p> </p> <p> </p> <li> <p>The SparkFun Thing Plus - ESP32-C6 adds a powerful wireless development option to SparkFun's popular Thing Plus footprint. This Thing Plus board features the ESP32-C6 WROOM-1-N16 module from espressif<sup>\u2122</sup>. It includes a LiPo battery charger and fuel gauge to charge and monitor a battery connected to the on-bard 2-pin JST connector, &amp;microSD card slot, an addressable LED and more. The board breaks out all of the ESP32-C6's 23 GPIO pins to a pair of 0.1\"-spaced PTH headers on either side of the board. The board also has a USB-C connector for primary power and programming and a Qwiic connector to integrate it into SparkFun's Qwiic ecosystem.</p> <p>The ESP32-C6 SoC is built around a RISC-V single-core processor with 16 MB flash memory with an integrated wireless stack. The wireless stack supports 2.4 GHz WiFi 6, Bluetooth<sup>\u00ae</sup> 5.3, Zigbee and Thread (802.15.4) and uses an on-board PCB antenna. The ESP32-C6 includes a wide range of peripheral options including SPI, UART, LPUART, I<sup>2</sup>C, I<sup>2</sup>S, LED PWM, USB Serial/JTAG controller, ADC and more. Many of these peripherals can be mapped to any GPIO pin though some are tied to specific pins. </p> <p> Purchase from SparkFun  </p> </li>"},{"location":"print_view/#required-materials","title":"Required Materials","text":"<p>To follow along with this guide you will need at least one USB-C cable to connect the Thing Plus to your computer: </p> <ul> <li> <p> <p> </p> <p> USB 3.1 Cable A to C - 3 Foot CAB-14743 </p> <li> <p> <p> </p> <p> Reversible USB A to C Cable - 2m CAB-15424 </p> <p>You may also want to get a Qwiic cable or kit to connect the Thing Plus - ESP32-C6 to other Qwiic devices:</p> <ul> <li> <p> <p> </p> <p> Flexible Qwiic Cable - 50mm PRT-17260 </p> <li> <p> <p> </p> <p> Flexible Qwiic Cable - 500mm PRT-17257 </p> <li> <p> <p> </p> <p>Flexible Qwiic Cable - Female Jumper (4-pin) CAB-17261 </p> <li> <p> <p> </p> <p> SparkFun Qwiic Cable Kit PRT-15081 </p>"},{"location":"print_view/#optional-materials","title":"Optional Materials","text":"<p>The Thing Plus - ESP32-C6 includes a 2-pin JST connector and integrated charging circuit for an attached single-cell LiPo battery. Below are a few options we recommend for battery-powered applications:</p> <ul> <li> <p> <p> </p> <p> Lithium Ion Battery - 1250mAh (IEC62133 Certified) PRT-18286 </p> <li> <p> <p> </p> <p> Lithium Ion Battery - 2Ah PRT-13855 </p> <li> <p> <p> </p> <p> Lithium Ion Battery - 400mAh PRT-13851 </p> <li> <p> <p> </p> <p> Lithium Ion Battery - 850mAh PRT-13854 </p> <p>If you prefer a soldered connection or want to modify the solder jumpers on this board, you may need some of the products listed below:</p> <ul> <li> <p> <p> </p> <p> SparkFun Qwiic Shield for Thing Plus DEV-16790 </p> <li> <p> <p> </p> <p> PINECIL - Smart Mini Portable Soldering Iron TOL-23913 </p> <li> <p> <p> </p> <p> Hobby Knife TOL-09200 </p> <li> <p> <p> </p> <p>Chip Quik No-Clean Flux Pen - 10mL CAB-14579 </p>"},{"location":"print_view/#suggested-reading","title":"Suggested Reading","text":"<p>We designed this board for integration into SparkFun's Qwiic connect system.  Click on the banner below to learn more about the SparkFun Qwiic Connect System.</p> Qwiic Connect System <p>Before getting started with this Hookup Guide, you may want to read through the tutorials below if you are not familiar with the concepts covered in them or want a refresher. If you are using either of the Qwiic Shields linked above, we recommend reading through their respective Hookup Guides before continuing with this tutorial:</p> <ul> <li> <p> Serial Communication </p> </li> <li> <p> I2C </p> </li> <li> <p> Logic Levels </p> </li> <li> <p> Installing Arduino IDE </p> </li> <li> <p> Installing an Arduino Library </p> </li> <li> <p> Serial Terminal Basics </p> </li> <li> <p> SparkFun Qwiic Shield for Thing Plus Hookup Guide </p> </li> <li> <p> How to Work with Jumper Pads and PCB Traces </p> </li> </ul>"},{"location":"print_view/#hardware-overview","title":"Hardware Overview","text":"<p>Let's take a closer look at the ESP32-C6 WROOM1 module and other hardware present on this Thing Plus board.</p>"},{"location":"print_view/#esp32-c6-wroom1-module","title":"ESP32-C6 WROOM1 Module","text":"<p>The ESP32-C6 WROOM1 module from espressif combines a powerful RISC-5 processor with a wireless stack compatible with most common wireless protocols.</p> <p></p> <p>This development board uses the WROOM1 version of the C6 module which has slightly more computing power in exchange for lesser power efficiency. The ESP32-C6 is built around a 32-bit RISC-V single-core processor with an integrated wireless stack. The wireless stack is compatible with 2.4 GHz WiFi 6, Bluetooth<sup>\u00ae</sup> 5.3, Zigbee and Thread (802.15.4) and uses an on-board PCB antenna. </p> <p>The module features a wide range of peripheral options including SPI, UART, LPUART, I<sup>2</sup>C, I<sup>2</sup>S, LED PWM, USB Serial/JTAG controller, ADC and more. Many of these peripherals can be mapped to any GPIO pin though some are tied to specific pins. This Thing Plus breaks out 21 pins from the module to a pair of 0.1\"-spaced PTH headers.</p> <p>The ESP32-C6 has 16 MB Flash memory along with 512 KB SRAM (high power)/ 16 KB SRAM (low power). The module uses pin strapping to configure boot mode parameters. The board defaults to standard mode (GPIO 9 internal pull-up, all other strapping pins floating) but it can be set to other parameters by performing the following pin strapping:</p> <ul> <li>SDIO Sampling and Driving Clock Edge - MTMS &amp; MTDI</li> <li>Chip Boot Mode - GPIO8 &amp; GPIO9</li> <li>ROM Code Printing to UART - GPIO8</li> <li>JTAG Signal Source - GPIO15</li> </ul>"},{"location":"print_view/#power-components","title":"Power Components","text":"<p>The Thing Plus ESP32-C6 includes several options for powering including USB-C, LiPo battery with on-board battery charging and monitoring circuits as well as direct power inputs.</p> <p></p>"},{"location":"print_view/#usb-c-connector","title":"USB-C Connector","text":"<p>The USB-C connector on the board acts as the primary serial interface for the ESP32-C6 module as well as a power input. It connects directly to the ESP32-C6's USB serial converter. The 5V USB input voltage is regulated down to 3.3V through a voltage regulator with a max current of 500mA@3.3V.</p>"},{"location":"print_view/#2-pin-jst-connector-battery-charger-fuel-gauge","title":"2-Pin JST Connector, Battery Charger, &amp; Fuel Gauge","text":"<p>The board has a 2-pin JST connector to connect a single-cell Lithium Ion (LiPo) battery for battery-powered applications. It also has an MCP73831 battery charger to charge an attached battery and a MAX17048 fuel gauge to monitor battery voltage levels over I<sup>2</sup>C. The charge rate is set to 214mA@3.3V. The MCP73831 receives power from the V_USB line so it only is powered when 5V is provided either over USB or the V_USB PTH pin. If applying voltage directly to the V_USB pin make sure it does not exceed 5.5V.</p>"},{"location":"print_view/#pinout-qwiic-connector","title":"Pinout &amp; Qwiic Connector","text":"<p>Next up let's take a look at the Thing Plus pinout and Qwiic connector on this board.</p> <p></p>"},{"location":"print_view/#pth-headers","title":"PTH Headers","text":"<p>The Thing Plus routes 23 of the ESP32-C6's GPIO pins to a pair of 0.1\"-spaced headers on either side of the board. This includes all seven of the 12-bit ADC-capable pins, one UART, one I<sup>2</sup>C bus (SDA/SCL), one SPI interface (POCI/PICO/SCK), and seven GPIO pins. Some of the GPIO connect to specific functions on the board by default through solder jumpers listed below:</p> <ul> <li>IO18 - CS</li> <li>IO22 - SD Detect</li> <li>IO11 - MAX17038 Alert</li> <li>IO23 - WS2812 STAT LED Data In</li> <li>IO15 - Low Power control</li> </ul>"},{"location":"print_view/#qwiic-connector","title":"Qwiic Connector","text":"<p>There's a Qwiic connector on the board tied to the ESP32-C6's Low Power I<sup>2</sup>C bus (I/O pins 6 and 7) for easy integration into SparkFun's Qwiic ecosystem. The Qwiic connector provides connections for SDA, SCL, 3.3V, and Ground.</p>"},{"location":"print_view/#buttons","title":"Buttons","text":"<p>There are two buttons on the board labeled RESET and BOOT. The RESET button is tied to the ESP32-C6's Enable (EN) pin and resets the module when pressed. The BOOT button puts the ESP32-C6 into bootloader mode when held down during power on or reset.</p> <p></p>"},{"location":"print_view/#sd-card-slot","title":"\u00b5SD Card Slot","text":"<p>This board also has a friction-fit \u00b5SD card slot for users who need more storage space on the Thing Plus - ESP32-C6. </p> <p></p> <p>The slot connects the SD card's communication interface to the ESP32-C6's SPI interface using the following pins:</p> <ul> <li>SD Serial Data Out: IO21/POCI</li> <li>SD Serial Data In: IO20/PICO</li> <li>SD Serial Clock: IO19/SCK</li> <li>SD Chip Select: IO18/CS</li> <li>SD Detect: IO22/SD_DET</li> </ul>"},{"location":"print_view/#leds","title":"LEDs","text":"<p>This Thing Plus has three LEDs labeled PWR, CHG, and STAT. The red Power (PWR) LED indicates whenever the 3.3V circuit is powered. The yellow Charge (CHG) LED indicates whenever the MCP73831 is charging a connected LiPo battery. The WS2812 RGB Status (STAT) LED connects the LED's Data In signal to IO23.</p> <p></p> <p>RGB LED</p> <p>The board definition for the Thing Plus - ESP32-C6 sets IO23 to use espressif's <code>RGB_BUILTIN</code> code support. This automatically includes the necessary code to control an RGB LED easily when calling <code>RGB_BUILTIN</code>. Unfortunately, this means the RGB PTH pin (IO23) can run into code conflicts when users attempt to use it for another purpose. If you really need IO23 for something other than the RGB LED, you may need to modify the board definition files in the ESP32 Arduino boards package. Modifying these files is beyond the scope of this tutorial and is not supported by SparkFun.</p>"},{"location":"print_view/#solder-jumpers","title":"Solder Jumpers","text":"<p>There are nine solder jumpers on the Thing Plus - ESP32-C6 labeled I<sup>2</sup>C, ALRT, SD_DET, MEAS, LP, SHLD, RGB, CHG, and PWR. The table below outlines the jumpers' labels, default state, function, and any notes regarding their use:</p> <p></p> Label Default State Function Notes I<sup>2</sup>C CLOSED Three-way jumper pulls the SDA/SCL lines to 3.3V through a pair of 2.2k\u03a9 resistors Open completely to disable pullups on I<sup>2</sup>C bus if needed ALRT CLOSED Ties the MAX17048's alert pin to IO11 for battery voltage monitoring Open to isolate IO11 from the MAX17048's alert pin if IO11 is needed for other uses SD_DET CLOSED Connects the \u00b5SD card's card detection pin to IO19 Open to disable \u00b5SD card detection or if IO19 is needed for other uses MEAS CLOSED Completes the input voltage circuit from V_USB &amp; V_Batt to the 3.3V regulator Open to interrupt the circuit to measure current consumed by the board with a digital multimeter LP See Note Enables/disables low power control for the ESP32-C6 Three-way jumper. Defaults to disabled (connects to Ground). Adjust to IO15 side to enable low power control SHLD CLOSED Ties the USB-C shield pin to the ground plane Open to isolate USB-C shield pin from the board's ground plane RGB Open Connects WS2812 data out (DO) signal to the No Connect/AREF PTH pin Open to isolate DO signal from the No Connect/AREF PTH pin to chain with other WS2812 LEDs CHG CLOSED Completes Charge LED circuit Open to disable Charge LED PWR CLOSED Completes the Power LED circuit Open to disable the Power LED"},{"location":"print_view/#board-dimensions","title":"Board Dimensions","text":"<p>This board matches the Thing Plus footprint and measures 2.30\" x 0.90\" (58.42mm x 22.86mm) with four mounting holes that fit a 4-40 screw though the top two mounting holes are obstructed by the ESP32-C6 module.</p> <p></p>"},{"location":"print_view/#hardware-assembly","title":"Hardware Assembly","text":"<p>Now that we're familiar with the hardware on this Thing Plus board, it's time to connect it to our computer or battery power.</p>"},{"location":"print_view/#basic-usb-assembly","title":"Basic USB Assembly","text":"<p>Basic assembly of the Thing Plus ESP32-C only requires a USB-C cable connecting the board to a computer. Just plug the cable into the USB-C connector like the photo below shows and you should see the RGB LED cycling through rainbow colors with the pre-loaded test code. From here, we can move on to installing the espressif boards package in Arduino and uploading code.</p> <p> </p> <p>Note</p> <p>Your computer may not recognize the board as a known USB device if you have not installed the espressif boards package in Arduino and/or installed the espressif IDF.</p>"},{"location":"print_view/#battery-assembly","title":"Battery Assembly","text":"<p>If you prefer a battery-powered application, plug a single-cell LiPo battery into the 2-pin JST connector on the underside of the board like the photo below. Remember, the MCP73831 only charges the battery when V_USB has voltage present either from the USB-C connector or through the V_USB PTH pin.</p> <p></p> <p>For tips on the proper use of a LiPo battery and the 2-pin JST connector, please read through our Single Cell LiPo Battery Care tutorial.</p>"},{"location":"print_view/#soldered-assembly","title":"Soldered Assembly","text":"<p>Those who prefer a traditional soldered assembly should solder wires or header pins to the PTH header on the side of the board. If you're not familiar with through-hole soldering or would like a refresher, take a look at our Through-Hole Soldering Tutorial:</p> <ul> <li> How to Solder: Through-Hole Soldering </li> </ul>"},{"location":"print_view/#software-setup","title":"Software Setup","text":"<p>Attention</p> <p>If this is your first time using Arduino, please read through our tutorial on installing the Arduino IDE. If you have not installed an Arduino library before, we recommend you check out our installation guide.</p> <p>With the ESP32-C6 Thing Plus connected to our computer, it's time to set up the boards package in Arduino.</p>"},{"location":"print_view/#installing-espressif-arduino-boards","title":"Installing espressif Arduino Boards","text":"<p>To install the ESP32 boards package, open the Preferences menu by navigating to File &gt; Preferences. Look at the bottom of the Preferences menu for \"Additional boards manager URLS\" and then copy this JSON link into that field:</p> <p><code>     https://espressif.github.io/arduino-esp32/package_esp32_dev_index.json </code></p> <p>Click \"Ok\" and then open the Boards Manager tool, search for \"espressif ESP32\" and install the latest release. This install process may take some time so feel free to step away while it downloads and installs.</p> <p></p>"},{"location":"print_view/#espressif-idf","title":"espressif IDF","text":"<p>Users who prefer to use espressif's development toolkit, espressif IDF, can get started by following their instructions here and  ESP32-C6 specific documentation here. </p>"},{"location":"print_view/#arduino-examples","title":"Arduino Examples","text":""},{"location":"print_view/#icon-simplearduino","title":"icon: simple/arduino","text":"<p>Now that we've installed the espressif boards package in Arduino, it's time to upload our first sketch to make sure everything is working properly.</p>"},{"location":"print_view/#blink-rgb-example","title":"Blink RGB Example","text":"<p>The ESP32 core includes integrated code support for easily controlling a WS2812 LED and an example demonstrating how to cycle an RGB LED like the one found on this Thing Plus so long as the board variant defines it as <code>RGB_BUILTIN</code>. The Thing Plus ESP32-C6 does define IO23 as <code>RBG_BUILTIN</code> so this example and all other code calling for the built-in RGB LED works for this board. Open the example by navigating to File &gt; Examples &gt; ESP32 &gt; GPIO &gt; BlinkRGB like the screenshot below shows: </p> <p></p> <p>Select the board (SparkFun Thing Plus - C6) and Port and click \"Upload\". After uploading you should see the STAT LED on the board turn on full white, turn off, and then cycle through red, green, and blue repeatedly.</p> <p>USB CDC On Boot Settings</p> <p>Take note of the option labeled \"USB CDC on Boot\" when selecting the Board from the Tools menu. This option sets the serial outputs and defines their label for use in code. The SparkFun variants default to Enable USB CDC on boot which sets both <code>Serial</code> and <code>Serial0</code> as available serial ports. In this configuration, <code>Serial</code> corresponds to the direct USB/Serial converter on the chip (and the USB-C interface) and <code>Serial0</code> corresponds to the UART0 bus (default pins are 16 and 17).</p> <p>With either setting, <code>Serial1</code> is available and refers to the UART1 bus (default pins are 4 and 5).</p>"},{"location":"print_view/#troubleshooting-tips","title":"Troubleshooting Tips","text":"<p>With either setting, <code>Serial1</code> is available and refers to the UART1 bus (default pins are 4 and 5).</p>"},{"location":"print_view/#rgb-led-pin","title":"RGB LED Pin","text":"<p>The board definition for the Thing Plus - ESP32-C6 sets IO23 to use espressif's <code>RGB_BUILTIN</code> code support. This automatically includes the necessary code to control an RGB LED easily when calling <code>RGB_BUILTIN</code>. Unfortunately, this means the RGB PTH pin (IO23) can run into code conflicts when users attempt to use it for another purpose. If you really need IO23 for something other than the RGB LED, you may need to modify the board definition files in the ESP32 Arduino boards package. Modifying these files is beyond the scope of this tutorial and is not supported by SparkFun.</p>"},{"location":"print_view/#general-troubleshooting","title":"General Troubleshooting","text":"<p>Need Help?</p> <p>If you need technical assistance or more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting.</p> <p> SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, the SparkFun Forums is a great place to search product forums and ask questions.</p> <p>Account Registration Required</p> <p>If this is your first visit to our forum, you'll need to create a Forum Account to post questions.</p>"},{"location":"print_view/#resources","title":"Resources:","text":"<p>For more information on the Thing Plus ESP32-C6, check out the resources below:</p> <ul> <li>Schematic</li> <li>Eagle Files</li> <li>Board Dimensions</li> <li>Datasheet (ESP32-C6 WROOM-1)</li> <li>Technical Reference Manual</li> <li>GitHub Repository</li> <li>Thing Plus Info Page</li> <li>Qwiic Info Page</li> </ul>"},{"location":"resources/","title":"Resources","text":"<p>For more information on the Thing Plus ESP32-C6, check out the resources below:</p> <ul> <li>Schematic</li> <li>Eagle Files</li> <li>Board Dimensions</li> <li>Datasheet (ESP32-C6 WROOM-1)</li> <li>Technical Reference Manual</li> <li>GitHub Repository</li> <li>Thing Plus Info Page</li> <li>Qwiic Info Page</li> </ul>"},{"location":"software_setup/","title":"Arduino Setup","text":"<p>Attention</p> <p>If this is your first time using Arduino, please read through our tutorial on installing the Arduino IDE. If you have not installed an Arduino library before, we recommend you check out our installation guide.</p> <p>With the ESP32-C6 Thing Plus connected to our computer, it's time to set up the boards package in Arduino.</p>"},{"location":"software_setup/#installing-espressif-arduino-boards","title":"Installing espressif Arduino Boards","text":"<p>To install the ESP32 boards package, open the Preferences menu by navigating to File &gt; Preferences. Look at the bottom of the Preferences menu for \"Additional boards manager URLS\" and then copy this JSON link into that field:</p> <p><code>     https://espressif.github.io/arduino-esp32/package_esp32_dev_index.json </code></p> <p>Click \"Ok\" and then open the Boards Manager tool, search for \"espressif ESP32\" and install the latest release. This install process may take some time so feel free to step away while it downloads and installs.</p> <p></p>"},{"location":"software_setup/#espressif-idf","title":"espressif IDF","text":"<p>Users who prefer to use espressif's development toolkit, espressif IDF, can get started by following their instructions here and  ESP32-C6 specific documentation here. </p>"},{"location":"troubleshooting/","title":"Troubleshooting","text":""},{"location":"troubleshooting/#usb-cdc-on-boot-settings","title":"USB CDC on Boot Settings","text":"<p>Take note of the option labeled \"USB CDC on Boot\" when selecting the Board from the Tools menu. This option sets the serial outputs and defines their label for use in code. The SparkFun variants default to Enable USB CDC on boot which sets both <code>Serial</code> and <code>Serial0</code> as available serial ports. In this configuration, <code>Serial</code> corresponds to the direct USB/Serial converter on the chip (and the USB-C interface) and <code>Serial0</code> corresponds to the UART0 bus (default pins are 16 and 17).</p> <p>With either setting, <code>Serial1</code> is available and refers to the UART1 bus (default pins are 4 and 5).</p>"},{"location":"troubleshooting/#rgb-led-pin","title":"RGB LED Pin","text":"<p>The board definition for the Thing Plus - ESP32-C6 sets IO23 to use espressif's <code>RGB_BUILTIN</code> code support. This automatically includes the necessary code to control an RGB LED easily when calling <code>RGB_BUILTIN</code>. Unfortunately, this means the RGB PTH pin (IO23) can run into code conflicts when users attempt to use it for another purpose. If you really need IO23 for something other than the RGB LED, you may need to modify the board definition files in the ESP32 Arduino boards package. Modifying these files is beyond the scope of this tutorial and is not supported by SparkFun.</p>"},{"location":"troubleshooting/#general-troubleshooting","title":"General Troubleshooting","text":"<p>Need Help?</p> <p>If you need technical assistance or more information on a product that is not working as you expected, we recommend heading on over to the SparkFun Technical Assistance page for some initial troubleshooting.</p> <p> SparkFun Technical Assistance Page </p> <p>If you can't find what you need there, the SparkFun Forums is a great place to search product forums and ask questions.</p> <p>Account Registration Required</p> <p>If this is your first visit to our forum, you'll need to create a Forum Account to post questions.</p>"}]}